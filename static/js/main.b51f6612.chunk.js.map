{"version":3,"sources":["components/Day.js","components/Month.js","components/Year.js","components/Dalendar/DalendarPresenter.js","components/Dalendar/index.js","components/Dalendar/DalendarContainer.js","App.js","index.js"],"names":["Container","styled","ul","_templateObject","Aday","li","_templateObject2","props","isSun","Day","state","days","getDays","year","month","date","Date","startDay","getDay","push","getMonth","setDate","getDate","_this","setState","onClickDay","day","console","log","_this$props","this","_this2","react_default","a","createElement","map","index","key","onClick","React","Component","Month_templateObject","AMonth","Month_templateObject2","MonthTitle","h4","_templateObject3","MonthDays","div","_templateObject4","Month","monthInYear","1","2","3","4","5","6","7","8","9","10","11","12","scrollToToday","Month_Container","Object","keys","id","concat","components_Day","Year_templateObject","AYear","Year_templateObject2","Year","years","today","Year_Container","components_Month","DalendarPresenter_templateObject","Header","DalendarPresenter_templateObject2","DayIndex","DalendarPresenter_templateObject3","TodayBtn","DalendarPresenter_templateObject4","ScrollArea","_templateObject5","DalendarPresenter","_ref","daysInWeek","scrollListener","currentScrollTop","todayScrollTop","DalendarPresenter_Container","onScroll","scrollTop","components_Year","DalendarContainer","getCalendarRange","thisYear","getFullYear","event","target","document","getElementById","offsetTop","setScrollTop","positionY","_this$state","Dalendar_DalendarPresenter","GlobalStyles","createGlobalStyle","App_templateObject","App_templateObject2","App","App_Container","Dalendar","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.b51f6612.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Aday = styled.li`\n  width: ${100 / 7}%;\n  margin: 15px 0px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${props => (props.isSun ? \"red\" : \"black\")};\n  cursor: pointer;\n`;\n\nclass Day extends React.Component {\n  state = {\n    days: []\n  };\n\n  componentDidMount() {\n    const { year, month } = this.props;\n    this.getDays(year, month);\n  }\n\n  render() {\n    const { days } = this.state;\n    return (\n      <Container>\n        {days.map((day, index) => (\n          <Aday\n            key={index}\n            onClick={() => this.onClickDay(day)}\n            isSun={day !== \"\" && day.getDay() === 0}\n          >\n            {day !== \"\" ? day.getDate() : \"\"}\n          </Aday>\n        ))}\n      </Container>\n    );\n  }\n\n  getDays = (year, month) => {\n    let date = new Date(year, month, 1);\n    let days = [];\n    let startDay = 0;\n\n    //give offset for 1st day in month\n    while (startDay !== date.getDay()) {\n      days.push(\"\");\n      startDay += 1;\n    }\n\n    // set days in the month\n    while (date.getMonth() === month) {\n      days.push(new Date(date));\n      date.setDate(date.getDate() + 1);\n    }\n\n    this.setState({ days });\n  };\n\n  onClickDay = day => {\n    console.log(day);\n  };\n}\n\nexport default Day;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Day from \"./Day\";\n\nconst Container = styled.ul`\n  width: 100%;\n`;\n\nconst AMonth = styled.li`\n  width: 100%;\n  height: 320px;\n`;\n\nconst MonthTitle = styled.h4`\n  width: 100%;\n  padding-left: 30px;\n  color: #af9090;\n  font-weight: 300;\n`;\n\nconst MonthDays = styled.div`\n  width: 100%;\n`;\n\nclass Month extends React.Component {\n  state = {\n    monthInYear: {\n      1: \"January\",\n      2: \"Fabruary\",\n      3: \"March\",\n      4: \"April\",\n      5: \"May\",\n      6: \"June\",\n      7: \"July\",\n      8: \"August\",\n      9: \"September\",\n      10: \"October\",\n      11: \"November\",\n      12: \"December\"\n    }\n  };\n\n  componentDidMount() {\n    const { scrollToToday } = this.props;\n    scrollToToday();\n  }\n\n  render() {\n    const { monthInYear } = this.state;\n    const { year } = this.props;\n    return (\n      <Container>\n        {Object.keys(monthInYear).map(month => (\n          <AMonth key={month} id={`${year}_${month}`}>\n            <MonthTitle>{monthInYear[month]}</MonthTitle>\n            <MonthDays>\n              <Day year={year} month={month - 1} />\n            </MonthDays>\n          </AMonth>\n        ))}\n      </Container>\n    );\n  }\n}\n\nexport default Month;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Month from \"./Month\";\n\nconst Container = styled.ul`\n  width: 100%;\n`;\n\nconst AYear = styled.li`\n  width: 100%;\n`;\n\nclass Year extends React.Component {\n  render() {\n    const { years, today, scrollToToday } = this.props;\n    return (\n      <Container>\n        {years.map((year, index) => (\n          <AYear key={index}>\n            <Month year={year} today={today} scrollToToday={scrollToToday} />\n          </AYear>\n        ))}\n      </Container>\n    );\n  }\n}\n\nexport default Year;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Year from \"../Year\";\n\nconst Container = styled.div`\n  width: 500px;\n  min-height: 400px;\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.3);\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Header = styled.ul`\n  width: 100%;\n  height: 30px;\n  display: flex;\n  margin-top: 0px;\n`;\n\nconst DayIndex = styled.li`\n  width: ${100 / 7}%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #bf8136;\n  margin: 30px 0px;\n`;\n\nconst TodayBtn = styled.div`\n  position: absolute;\n  top: 55px;\n  width: 80px;\n  height: 30px;\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.3);\n  background: white;\n  border-radius: 30px;\n  font-size: 14px;\n  color: #bf8136;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n\n  :hover {\n    background: #bf8136;\n    color: white;\n  }\n`;\n\nconst ScrollArea = styled.div`\n  width: 100%;\n  height: 400px;\n  overflow: scroll;\n  overflow-x: hidden;\n  -webkit-overflow-scrolling: touch;\n`;\n\nconst DalendarPresenter = ({\n  years,\n  daysInWeek,\n  today,\n  scrollListener,\n  scrollToToday,\n  currentScrollTop,\n  todayScrollTop\n}) => (\n  <Container>\n    <Header>\n      {daysInWeek.map((day, index) => (\n        <DayIndex key={index}>{day}</DayIndex>\n      ))}\n    </Header>\n    {(currentScrollTop - 70 > todayScrollTop || currentScrollTop + 70 < todayScrollTop) && (\n      <TodayBtn onClick={() => scrollToToday()}>today</TodayBtn>\n    )}\n    <ScrollArea id={\"scrollArea\"} onScroll={scrollListener} scrollTop={1380}>\n      <Year years={years} today={today} scrollToToday={scrollToToday} />\n    </ScrollArea>\n  </Container>\n);\n\nexport default DalendarPresenter;\n","import DalendarContainer from \"./DalendarContainer\";\n\nexport default DalendarContainer;\n","import React from \"react\";\nimport DalendarPresenter from \"./DalendarPresenter\";\n\nclass DalendarContainer extends React.Component {\n  state = {\n    today: new Date(),\n    years: [],\n    daysInWeek: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\"],\n    todayScrollTop: 0,\n    currentScrollTop: 0\n  };\n\n  componentDidMount() {\n    this.getCalendarRange();\n  }\n\n  render() {\n    const { years, daysInWeek, today, currentScrollTop, todayScrollTop } = this.state;\n    return (\n      <DalendarPresenter\n        years={years}\n        daysInWeek={daysInWeek}\n        today={today}\n        scrollListener={this.scrollListener}\n        scrollToToday={this.scrollToToday}\n        currentScrollTop={currentScrollTop}\n        todayScrollTop={todayScrollTop}\n      />\n    );\n  }\n\n  getCalendarRange = () => {\n    const { today } = this.state;\n    const thisYear = today.getFullYear();\n\n    this.setState({\n      years: [thisYear - 1, thisYear, thisYear + 1]\n    });\n  };\n\n  // -----------------------------------------------------------------\n\n  scrollListener = event => {\n    const { target } = event;\n    const currentScrollTop = target.scrollTop;\n\n    this.setState({\n      currentScrollTop\n    });\n  };\n\n  // -----------------------------------------------------------------\n\n  scrollToToday = () => {\n    const { today } = this.state;\n    const year = today.getFullYear();\n    const month = today.getMonth() + 1;\n    // get todays top offset from scroll top\n    const thisMonth = document.getElementById(`${year}_${month}`);\n    const todayScrollTop = thisMonth.offsetTop - 80;\n\n    this.setState({\n      todayScrollTop\n    });\n    // set scroll top to move to today\n    this.setScrollTop(todayScrollTop);\n  };\n\n  // -----------------------------------------------------------------\n\n  setScrollTop = positionY => {\n    document.getElementById(\"scrollArea\").scrollTop = positionY;\n  };\n\n  // -----------------------------------------------------------------\n}\n\nexport default DalendarContainer;\n","import React, { Component } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\n\nimport Dalendar from \"./components/Dalendar\";\n\nconst GlobalStyles = createGlobalStyle`\n\n  @import url('https://fonts.googleapis.com/css?family=Source+Sans+Pro');\n\n  html, body, #root {\n    font-family: 'Source Sans Pro', sans-serif;\n  }\n\n  ul {\n    padding: 0;\n  }\n\n  li {\n    list-style-type: none;\n  }\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <Container>\n        <GlobalStyles />\n        <h1>Dalendar</h1>\n        <Dalendar />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}